<div class="outerBlue"> 
<div class="innerBlue">
<h1>
  {{title}}
</h1>
  <form [formGroup]="registerForm">
    <div class="form-group has-feedback">
      <label for="username">Username</label>
      <input type="text" 
        class="form-control"
        (blur)="checkUserExists()"
        [appSelfFocus]='true'
        formControlName="username"
        placeholder="Choose a Username">
        <i class="glyphicon form-control-feedback"
        [class.glyphicon-exclamation-sign]="registerForm.get('username').pristine"
        [class.glyphicon-question-sign]="registerForm.get('username').pending"
        [class.glyphicon-ok-sign]="registerForm.get('username').valid"
        [class.glyphicon-remove-sign]="registerForm.get('username').invalid && registerForm.get('username').dirty"
        ></i>
        <p *ngIf="registerForm.get('username').hasError('usernameInUse') && registerForm.get('username').dirty">Username gi√† in uso</p>
        <p *ngIf="registerForm.get('username').hasError('required') && registerForm.get('username').dirty">Devi scegliere uno username</p>
    </div>
    <div class="form-group has-feedback">
      <label>Email</label>
      <input type="email" 
        class="form-control"
        formControlName="email"
        placeholder="You valid email">
        <i class="glyphicon form-control-feedback"
        [class.glyphicon-exclamation-sign]="registerForm.get('email').pristine"
        [class.glyphicon-question-sign]="registerForm.get('email').pending"
        [class.glyphicon-ok-sign]="registerForm.get('email').valid"
        [class.glyphicon-remove-sign]="registerForm.get('email').invalid && registerForm.get('email').dirty"
        ></i>
        <p *ngIf="registerForm.get('email').hasError('invalidEmail') && registerForm.get('email').dirty">Formato email non valido</p>
        <p *ngIf="registerForm.get('email').hasError('required') && registerForm.get('email').dirty">Devi inserire un indirizzo email</p>        
    </div>
    <div class="form-group has-feedback">
      <label>Password</label>
      <input type="password" 
        class="form-control"
        formControlName="password"
        placeholder="Choose a password">
        <i class="glyphicon form-control-feedback"
        [class.glyphicon-exclamation-sign]="registerForm.get('password').pristine"
        [class.glyphicon-ok-sign]="registerForm.get('password').valid"
        [class.glyphicon-remove-sign]="registerForm.get('password').invalid && registerForm.get('password').dirty"
        ></i>
        <p *ngIf="registerForm.get('password').hasError('minlength') && registerForm.get('password').dirty">La password deve essere lunga almeno 5 caratteri</p>        
        <p *ngIf="registerForm.get('password').hasError('required') && registerForm.get('password').dirty">Devi scegliere una password</p>        
        
    </div>
    <div class="form-group has-feedback">
      <label>Conferma Password</label>
      <input type="password" 
        class="form-control"
        formControlName="password2"
        placeholder="Confirm your password">
        <i class="glyphicon form-control-feedback"
        [class.glyphicon-exclamation-sign]="registerForm.get('password2').pristine"
        [class.glyphicon-ok-sign]="registerForm.get('password2').valid"
        [class.glyphicon-remove-sign]="registerForm.get('password2').invalid && registerForm.get('password2').dirty"
        ></i>
        <p *ngIf="registerForm.get('password2').hasError('differentPassword') && registerForm.get('password2').dirty">Le password non coincidono</p>
        <p *ngIf="registerForm.get('password2').hasError('required') && registerForm.get('password2').dirty">Devi confermare la password</p>
    </div>
    <p class="error" *ngIf="error!==''">{{error}}</p> 
    <button (click)="register()" [disabled]="registerForm.invalid" class="btn btn-primary pull-left">Register</button>   
  </form>
  <button (click)="back()" class="btn btn-danger pull-right">Back</button>   
   
</div>
</div>

